#!/usr/bin/python3.8
import crypt # Library used to produce a hash password
import time # Library used to create delays for a realistic user experience

print("\n---------------- PASSWORD CRACKER ----------------")

# User input
hashFile = input("\nEnter name of file containing hashes: ")
pwdFile = input("\nEnter name of password list file: ")

fileOp = open(hashFile) # Opens hash file 
hashList = fileOp.read().splitlines() # Reads it, splits lines with \n at the end
fileOp.close() # Closes hash file

fileOp = open(pwdFile) # Opens password list file
pwdList = fileOp.read().splitlines() # Reads it, splits lines with \n at the end
fileOp.close() # Closes password list file

try:
	for hashVal in hashList: # Outer loop of hashes
		# Splitting the hashVal twice with the ":" character and taking the first element which has the username
		username = hashVal.split(":", 2)[0] 
		print("\nCracking password for user:", username)
		
		# Splitting the hashVal twice with the ":" character and taking the second element which has the password
		password = hashVal.split(":", 2)[1] 
		
		#Splitting the password once with the "$" character from the right (rsplit) to get the salt with $digit$ as its prefix
		prefixedSalt = password.rsplit("$", 1)[0]  
		
		# Match counter to be used in a test case below if a match has been found or not
		match = 0 
		
		for testPwd in pwdList: # Inner loop of passwords in wordlist
			# Condition if the extracted password is the same value as the hashed password produced 
			# by the crypt() function using the test password from the wordlist and the salt with the hash algorithm
			if password == crypt.crypt(testPwd, prefixedSalt): 
				print("[!] M A T C H   F O U N D [!]")
				time.sleep(1.5) # Delays for 1.5 secs before credentials are shown
				print ("[*] Username: "+username+" | Password: "+testPwd+" [*]")
				match += 1
				break # Breaks inner loop after finding a match
				
		if match == 0:
			print("No matches found for this user.")
				
finally:
	print("\nCracking of '"+hashFile+"' has been completed using '"+pwdFile+"'.\n")
